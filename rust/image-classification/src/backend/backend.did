type BoundingBox = record {
  left: float32;
  top: float32;
  right: float32;
  bottom: float32;
};

type Embedding = record {
  v0: vec float32;
};

type Person = record {
  label: text;
  score: float32;
};

type Detection = variant {
  Ok: BoundingBox;
  Err: Error;
};

type Addition = variant {
  Ok: Embedding;
  Err: Error;
};

type Recognition = variant {
  Ok: Person;
  Err: Error;
};

type Error = record {
  message: text;
};

service : {
    "detect": (image: blob) -> (Detection) query;
    "recognize": (image: blob) -> (Recognition) query;
    "add": (label: text, image: blob) -> (Addition);
}