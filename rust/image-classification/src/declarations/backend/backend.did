type BoundingBox = record {
  left: float32;
  top: float32;
  right: float32;
  bottom: float32;
};

type Embedding = record {
  v0: vec float32;
};

type DetectionError = record {
  message: text;
};

type DetectionResult = variant {
  Ok: BoundingBox;
  Err: DetectionError;
};

type EmbeddingError = record {
  message: text;
};

type EmbeddingResult = variant {
  Ok: Embedding;
  Err: EmbeddingError;
};


service : {
    "detect": (image: blob) -> (DetectionResult);
    "detect_query": (image: blob) -> (DetectionResult) query;
    "embedding": (image: blob) -> (EmbeddingResult);
}
